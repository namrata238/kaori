/*Assignment 8 */
/*DiskSSTF.c */
#include <stdio.h>
#include <stdlib.h>
int main() {
int n, i, j, head, total_movement = 0;
printf("Enter the number of requests: ");
scanf("%d", &n);
int requests[n], completed[n];
printf("Enter the request sequence: ");
for (i = 0; i < n; i++) {
scanf("%d", &requests[i]);
completed[i] = 0; 
}
printf("Enter the initial head position: ");
scanf("%d", &head);
for (i = 0; i < n; i++) {
int min = 100000, min_index = -1;
for (j = 0; j < n; j++) {
if (!completed[j] && abs(head - requests[j]) < min) {
min = abs(head - requests[j]);
min_index = j;}
}
completed[min_index] = 1; 
total_movement += abs(head - requests[min_index]);
head = requests[min_index];
printf("Serviced request: %d\n", head);
}
printf("Total head movement: %d\n", total_movement);
return 0;
}

/*DiskSCAN.c */
#include <stdio.h>
#include <stdlib.h>
int main() {
int n, i, head, total_movement = 0, direction;
printf("Enter the number of requests: ");
scanf("%d", &n);
int requests[n];
printf("Enter the request sequence: ");
for (i = 0; i < n; i++) {
scanf("%d", &requests[i]);
}
printf("Enter the initial head position: ");
scanf("%d", &head);
printf("Enter the disk size (last cylinder number): ");
int disk_size;
scanf("%d", &disk_size);
printf("Enter the direction (1 for high, 0 for low): ");
scanf("%d", &direction);
for (i = 0; i < n - 1; i++) {
for (int j = i + 1; j < n; j++) {
if (requests[i] > requests[j]) {
int temp = requests[i];
requests[i] = requests[j];
requests[j] = temp;
}
}
}
if (direction == 1) { 
for (i = 0; i < n && requests[i] < head; i++);
for (; i < n; i++) {
printf("Serviced request: %d\n", requests[i]);
total_movement += abs(head - requests[i]);
head = requests[i];
}
if (head < disk_size - 1) {
total_movement += abs(head - (disk_size - 1));
head = disk_size - 1;
}
for (i--; i >= 0; i--) {
printf("Serviced request: %d\n", requests[i]);
total_movement += abs(head - requests[i]);
head = requests[i];
}
} else {
for (i = n - 1; i >= 0 && requests[i] > head; i--);
for (; i >= 0; i--) {
printf("Serviced request: %d\n", requests[i]);
total_movement += abs(head - requests[i]);
head = requests[i];
}
if (head > 0) {
total_movement += head;
head = 0;
}
for (i++; i < n; i++) {
printf("Serviced request: %d\n", requests[i]);
total_movement += abs(head - requests[i]);
head = requests[i];
}}
printf("Total head movement: %d\n", total_movement);
return 0;
}

/*DiskCLOOK.c */
#include <stdio.h>
#include <stdlib.h>
int main() {
int n, i, head, total_movement = 0;
printf("Enter the number of requests: ");
scanf("%d", &n);
int requests[n];
printf("Enter the request sequence: ");
for (i = 0; i < n; i++) {
scanf("%d", &requests[i]);
}printf("Enter the initial head position: ");
scanf("%d", &head);
for (i = 0; i < n - 1; i++) {
for (int j = i + 1; j < n; j++) {
if (requests[i] > requests[j]) {
int temp = requests[i];
requests[i] = requests[j];
requests[j] = temp;
}
}
}
for (i = 0; i < n && requests[i] < head; i++);
for (; i < n; i++) {
printf("Serviced request: %d\n", requests[i]);
total_movement += abs(head - requests[i]);
head = requests[i];
}
if (i > 0) {
total_movement += abs(head - requests[0]);
head = requests[0];
for (i = 1; i < n; i++) {
printf("Serviced request: %d\n", requests[i]);
total_movement += abs(head - requests[i]);
head = requests[i];
}
}
printf("Total head movement: %d\n", total_movement);
return 0;
}


